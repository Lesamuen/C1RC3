{
    "bot.login": "{} >> Successfully logged in as {}",
    "bot.disconnect": "{} >> Lost connection to Discord!",
    "bot.reconnect": "{} >> Connected to Discord!",
    "bot.init": "{} >> Initializing connection to Discord...",
    "bot.crash": "{} >> UNEXPECTED ERROR occurred during bot loop; bot has closed!\n{}\n                     >> Relaunching bot in 5 minutes...",

    "error": "*C1RC3's face is briefly replaced by a bright red exclamation mark.* `\"AN ERROR HAS OCCURED. PLEASE CONTACT YOUR LOCAL ADMINISTRATOR FOR ASSISTANCE IN DIAGNOSIS.\"`",
    "error.log": "{} >> [{}], [{}] | UNEXPECTED ERROR occurred while handling {}'s command\n{}",
    
    "admin.deny": "`\"Request denied. Administrator-level Access required.\"`",
    "admin.deny.log": "{} >> [{}], [{}] | {} admin permission denied",
    "admin.shutdown": "https://tenor.com/view/anime-dan-machi-sad-sad-face-sorrow-gif-13886240",
    "admin.shutdown.log": "{} >> [{}], [{}] | Admin {} externally shut down C1RC3",
    
    "pat.single": [
        "https://tenor.com/view/anime-pat-gif-22001993",
        "https://tenor.com/view/ruby-ruby-hoshino-headpat-anime-oshi-no-ko-gif-18256603620411463351",
        "https://tenor.com/view/anime-head-pat-anime-head-rub-neko-anime-love-anime-gif-16121044",
        "https://tenor.com/view/qualidea-code-head-pat-anime-anime-girl-blush-anime-gif-24627864",
        "https://tenor.com/view/kaede-azusagawa-kaede-gif-head-headpat-gif-13284057",
        "https://tenor.com/view/pat-gif-20637970",
        "https://tenor.com/view/head-pat-anime-kawaii-neko-nyaruko-gif-15735895",
        "https://tenor.com/view/anime-head-pat-gif-23472603",
        "https://tenor.com/view/anime-pat-gif-22001979",
        "https://tenor.com/view/headpats-anime-cat-girl-beeg-pats-shake-pats-gif-7464612627661142514",
        "https://tenor.com/view/senpai-ga-uzai-kouhai-no-hanashi-futaba-futaba-igarashi-my-senpai-is-annoying-headpats-anime-gif-23547171",
        "https://tenor.com/view/head-pat-love-live-anime-gif-11053869",
        "https://tenor.com/view/pat-gif-19836590",
        "https://tenor.com/view/anime-cry-blush-cute-petting-gif-22149967",
        "https://tenor.com/view/anime-head-pat-gif-23472600",
        "https://tenor.com/view/kanna-kanna-kamui-dragon-maid-miss-kobayashis-dragon-maid-anime-gif-16567663",
        "https://tenor.com/view/pet-head-cute-rem-re-zero-anime-gif-16038325",
        "https://tenor.com/view/dakooters-anime-headpats-pats-headpatting-gif-19110358",
        "https://tenor.com/view/hinako-note-pat-pat-head-pat-anime-kawaii-gif-14816799",
        "https://tenor.com/view/pat-gif-19836598"
        ],
    "pat.double": [
        "https://tenor.com/view/anime-cat-girls-pet-head-cute-girls-gif-17829980",
        "https://tenor.com/view/senko-cute-smiling-gif-14951592",
        "https://tenor.com/view/anime-neko-anime-head-pat-anime-head-rub-neko-para-gif-16085488"
        ],
    "pat.log.single": "{} >> [{}], [{}] | {} headpatted {}",
    "pat.log.double": "{} >> [{}], [{}] | {} headpatted {} and {}",

    "chips": [
        "<:chip1:1216075094947004617>",
        "<:chip2:1216075127481962606>",
        "<:chip3:1216075181898993664>",
        "<:chip4:1216075196763734027>",
        "<:chip5:1216075227726086305>",
        "<:chip6:1216075286005813338>"
        ],

    "deck.standard": [
        "<:b2:1212795165467742208><:physical:1212794991739670709>",
        "<:b3:1212795166583431208><:physical:1212794991739670709>",
        "<:b4:1212795167795449916><:physical:1212794991739670709>",
        "<:b5:1212795168995151932><:physical:1212794991739670709>",
        "<:b6:1212795171218137198><:physical:1212794991739670709>",
        "<:b7:1212795173650571375><:physical:1212794991739670709>",
        "<:b8:1212795174804263012><:physical:1212794991739670709>",
        "<:b9:1212795176414744576><:physical:1212794991739670709>",
        "<:b10:1212795178155249694><:physical:1212794991739670709>",
        "<:bj:1212795210824683571><:physical:1212794991739670709>",
        "<:bq:1212795213022629948><:physical:1212794991739670709>",
        "<:bk:1212795212057944074><:physical:1212794991739670709>",
        "<:ba:1212795139118858271><:physical:1212794991739670709>",
        "<:b2:1212795165467742208><:male:1212794904355405876>",
        "<:b3:1212795166583431208><:male:1212794904355405876>",
        "<:b4:1212795167795449916><:male:1212794904355405876>",
        "<:b5:1212795168995151932><:male:1212794904355405876>",
        "<:b6:1212795171218137198><:male:1212794904355405876>",
        "<:b7:1212795173650571375><:male:1212794904355405876>",
        "<:b8:1212795174804263012><:male:1212794904355405876>",
        "<:b9:1212795176414744576><:male:1212794904355405876>",
        "<:b10:1212795178155249694><:male:1212794904355405876>",
        "<:bj:1212795210824683571><:male:1212794904355405876>",
        "<:bq:1212795213022629948><:male:1212794904355405876>",
        "<:bk:1212795212057944074><:male:1212794904355405876>",
        "<:ba:1212795139118858271><:male:1212794904355405876>",
        "<:p2:1212795403163148318><:female:1212794934109671494>",
        "<:p3:1212795404253667348><:female:1212794934109671494>",
        "<:p4:1212795405327278120><:female:1212794934109671494>",
        "<:p5:1212795406568792144><:female:1212794934109671494>",
        "<:p6:1212795408124739634><:female:1212794934109671494>",
        "<:p7:1212795409593016381><:female:1212794934109671494>",
        "<:p8:1212795410838454362><:female:1212794934109671494>",
        "<:p9:1212795412080238622><:female:1212794934109671494>",
        "<:p10:1212797625141694464><:female:1212794934109671494>",
        "<:pj:1212797652995940362><:female:1212794934109671494>",
        "<:pq:1212797657035046992><:female:1212794934109671494>",
        "<:pk:1212797655101472849><:female:1212794934109671494>",
        "<:pa:1212795346418278460><:female:1212794934109671494>",
        "<:p2:1212795403163148318><:mental:1212795022517342260>",
        "<:p3:1212795404253667348><:mental:1212795022517342260>",
        "<:p4:1212795405327278120><:mental:1212795022517342260>",
        "<:p5:1212795406568792144><:mental:1212795022517342260>",
        "<:p6:1212795408124739634><:mental:1212795022517342260>",
        "<:p7:1212795409593016381><:mental:1212795022517342260>",
        "<:p8:1212795410838454362><:mental:1212795022517342260>",
        "<:p9:1212795412080238622><:mental:1212795022517342260>",
        "<:p10:1212797625141694464><:mental:1212795022517342260>",
        "<:pj:1212797652995940362><:mental:1212795022517342260>",
        "<:pq:1212797657035046992><:mental:1212795022517342260>",
        "<:pk:1212797655101472849><:mental:1212795022517342260>",
        "<:pa:1212795346418278460><:mental:1212795022517342260>",
        "<:back1:1217322659982082058><:back2:1217322660724211723>"
        ],

    "chips.open.log": "{} >> [{}], [{}] | {} opened an account under the name \"{}\"",
    "chips.open": "*C1RC3 nods.* `\"Request accepted and processed. An account has been opened under the name '{}'.\"`",
    "chips.open.dupe.log": "{} >> [{}], [{}] | {} tried to open a duplicate account under the name \"{}\"",
    "chips.dupe": "`\"Request denied. An account already exists under the name '{}'.\"`",
    "chips.none.log": "{} >> [{}], [{}] | {} failed to find account \"{}\"",
    "chips.none": "`\"Request failed. No account exists under that name.\"`",
    "chips.name.same.log": "{} >> [{}], [{}] | {} didn't change name of account \"{}\" at all",
    "chips.name.same": "`\"Request failed. That is already the name your account is under.\"`",
    "chips.name.dupe.log": "{} >> [{}], [{}] | {} tried to change name of account \"{}\" to duplicate \"{}\"",
    "chips.name.other.log": "{} >> [{}], [{}] | {} tried to change name of other's account \"{}\"",
    "chips.other": "`\"Request denied. This account does not belong to you.\"`",
    "chips.name.log": "{} >> [{}], [{}] | {} changed name of account \"{}\" to \"{}\"",
    "chips.name": "*You feel a small tingle all over your body as C1RC3 scans your magical signature, and her face flashes green for a moment.*\n`\"Request approved. The account under '{}' is now under the name '{}'.\"`",
    "chips.bal.other.log": "{} >> [{}], [{}] | {} tried to access other's account \"{}\"",
    "chips.bal.log": "{} >> [{}], [{}] | {} checked the balance of their account \"{}\"",
    "chips.bal": "*You feel a small tingle all over your body as C1RC3 scans your magical signature, and her face flashes green for a moment.*\n`\"Request approved. The account under the name '{}' currently contains:\"`\n# {}",
    "chips.depo.zero.log": "{} >> [{}], [{}] | {} tried to deposit nothing into an account",
    "chips.depo.zero": "`\"...Request accepted. You have deposited nothing.\"`",
    "chips.depo.other.log": "{} >> [{}], [{}] | {} tried to deposit into other's account \"{}\"",
    "chips.depo.log": "{} >> [{}], [{}] | {} deposited {} chips into their account \"{}\"",
    "chips.depo": "*You feel a small tingle all over your body as C1RC3 scans your magical signature, and her face flashes green for a moment.*\n`\"Request approved.\"`\n*The chips you are holding gently glow before evaporating into golden light that shoots over to C1RC3, infusing into her. Her body quivers with pleasure, but she shows no emotion in her automated state.*\n`\"The account under the name '{}' now contains:\"`\n# {}",
    "chips.with.zero.log": "{} >> [{}], [{}] | {} tried to withdraw nothing from an account",
    "chips.with.zero": "`\"...Request accepted. You have withdrawn nothing.\"`",
    "chips.with.other.log": "{} >> [{}], [{}] | {} tried to withdraw from other's account \"{}\"",
    "chips.with.fail.log": "{} >> [{}], [{}] | {} tried to withdraw too many chips from their account \"{}\"",
    "chips.with.fail": "`\"Request denied. You do not have enough chips in your account for that withdrawal.\"`",
    "chips.with.log": "{} >> [{}], [{}] | {} withdrew {} chips from their account \"{}\"",
    "chips.with": "*You feel a small tingle all over your body as C1RC3 scans your magical signature, and her face flashes green for a moment.*\n`\"Request approved.\"`\n*Golden light begins to condense from nowhere into C1RC3's body as she visibly shivers. A hidden compartment in her midriff suddenly slides open, containing a pile of the chips you requested.*\n`\"The account under the name '{}' now contains:\"`\n# {}",

    "gen.create": "*C1RC3 approaches you when you call for a dealer, and takes her place at the dealer's stand.*\n`\"Your request for a {} stakes game has been processed. I am C1RC3 #{}, and I shall be your table's arbitrator today. Please state your name for the record, in order for your participation to be counted.\"`",
    "gen.create.stake": ["low", "normal", "high"],
    "gen.create.log": "{} >> [{}], [{}] | {} started a {} game",
    "gen.create.exists": "`\"There is already a game running at this table.\"`",
    "gen.create.exists.log": "{} >> [{}], [{}] | {} tried to create another game",
    "gen.join": "*C1RC3 nods.* `\"Request accepted. {} is now participating in this game.\"`",
    "gen.join.log": "{} >> [{}], [{}] | {} joined a game as {}",
    "gen.join.first": "`\"As the first player, you shall be responsible for initiating the first bet of the game.\"`",
    "gen.none": "`\"There is no game of that type running at this table at the moment.\"`",
    "gen.join.none.log": " >> [{}], [{}] | {} tried to join no game",
    "gen.join.full": "`\"This table is already full.\"`",
    "gen.join.full.log": " >> [{}], [{}] | {} tried to join a full game",
    "gen.join.mid": "`\"This table is in the middle of a round; please wait until the round is over before joining.\"`",
    "gen.join.mid.log": " >> [{}], [{}] | {} tried to join a game mid-round",
    "gen.join.re": "`\"You are already part of this table.\"`",
    "gen.join.re.log": " >> [{}], [{}] | {} tried to rejoin a game",
    "gen.lose": "`\"Understood. Player {} has officially conceded.\"`\n*C1RC3 snaps her fingers as the magic of the casino flows into {}, solidifying their new form. Any of their remaining chips fade as multicolored lights are drained out of them, reabsorbed into C1RC3 and making her frame shivers. She then pulls them into an open compartment in her abdomen, where it closes shut seamlessly.*\n",
    "gen.lose.log": "{} >> [{}], [{}] | {} conceded from a game",
    "gen.lose.none.log": "{} >> [{}], [{}] | {} tried to concede from no game",
    "gen.lose.spec": "`\"You cannot concede a game you are not a part of.\"`",
    "gen.lose.spec.log": "{} >> [{}], [{}] | {} tried to concede from the wrong game",
    "gen.lose.mid": "`\"You cannot concede right now, in the middle of a round.\"`",
    "gen.lose.mid.log": "{} >> [{}], [{}] | {} tried to concede mid-game",
    "gen.lose.win": "\n*C1RC3 turns to the last player.* `\"Congratulations, {}, you have won against everyone at the table.\nYou may choose to transform back to your original form from the beginning of the game, or keep your current one if it is complete.\n{}\n*With that, C1RC3 walks off to attend to other tables.*",
    "gen.lose.win.nostake": "Because this table was playing at low stakes, you unfortunately do not keep these.\"` *She reaches over and shovels your remaining chips into herself, absorbing their magic as well.*\n*She then turns to the other players.* `\"The rest of you, please enjoy your temporary forms while they last.\"`\n*With that, C1RC3 walks off to attend to other tables.*",
    "gen.lose.win.stake": "Because this table was playing at {} stakes, you shall receive {} of the chips you have used on others thus far.\"`\n*She places her hands on the table and leans forward, while the sound of clinking chips comes from her body. Eventually, the compartment in her midriff slides open, and out flows a great pile of dull, magicless chips, totalling:*\n# {}\n*While she pulls your unused chips back into herself, she explains with an even tone,*`\"You may come see me or any staff member later to have the magic reinfused into them, such that you may use them on yourself to change your own form to your liking. Otherwise, you may store them with me. May fortune continue to find you.\"`",
    "gen.lose.stake": ["normal", "high", "half", "all"],
    "gen.lose.win.log": "                     >> Game ended with winner {}.",
    "gen.lose.cancel": "`\"Understood. Player {} has changed their mind.\"`",
    "gen.lose.delete": "*With no one left sitting at the table, C1RC3 simply walks off to attend to other tables.*",
    "gen.lose.delete.log": "                     >> Game deleted as all players left.",
    "gen.id": "`\"The unique soul identifications for each player at this table are:\"`\n{}",
    "gen.id.player": "**{}**: {}\n    __Chips__: {}\n    __Used__: {}\n",
    "gen.id.log": "{} >> [{}], [{}] | {} identified players",
    "gen.id.none.log": "{} >> [{}], [{}] | {} tried to identify players at an empty table",
    "gen.name": "*C1RC3 nods.* `\"Very well. I will refer to you as {} from now on.\"`",
    "gen.name.log": "{} >> [{}], [{}] | {} renamed to {}",
    "gen.name.none.log": "{} >> [{}], [{}] | {} tried to rename with no game",
    "gen.name.spec": "`\"You cannot rename yourself in a game you are not a part of.\"`",
    "gen.name.spec.log": "{} >> [{}], [{}] | {} tried to rename in the wrong game",
    "gen.chips": "`\"{}, you currently have:\"`\n# {}",
    "gen.chips.log": "{} >> [{}], [{}] | {} viewed chips ({}) in a game",
    "gen.chips.none.log": "{} >> [{}], [{}] | {} tried to view chips with no game",
    "gen.chips.spec": "`\"You do not have any chips for game you are not a part of.\"`",
    "gen.chips.spec.log": "{} >> [{}], [{}] | {} tried to view chips in the wrong game",
    "gen.bet": "*C1RC3 nods to your request, as she reiterates,* `\"{} has placed a bet of:\"`\n## {}",
    "gen.bet.log": "{} >> [{}], [{}] | {} placed a bet of {}",
    "gen.bet.zero": "`\"You cannot bet nothing.\"`",
    "gen.bet.zero.log": "{} >> [{}], [{}] | {} tried to bet nothing",
    "gen.bet.none.log": "{} >> [{}], [{}] | {} tried to bet with no game",
    "gen.bet.spec": "`\"You cannot bet in a game you are not a part of.\"`",
    "gen.bet.spec.log": "{} >> [{}], [{}] | {} tried to bet in the wrong game",
    "gen.bet.mid": "`\"You cannot bet right now, in the middle of a round.\"`",
    "gen.bet.mid.log": "{} >> [{}], [{}] | {} tried to bet mid-game",
    "gen.bet.turn": "`\"You cannot bet until the initial bet has been decided on.\"`",
    "gen.bet.turn.log": "{} >> [{}], [{}] | {} tried to bet out of turn",
    "gen.use": "`\"{} has used:\"`\n## {}",
    "gen.use.log": "{} >> [{}], [{}] | {} used {} chips",
    "gen.use.zero": "`\"You cannot use no chips.\"`",
    "gen.use.zero.log": "{} >> [{}], [{}] | {} tried to use no chips",
    "gen.use.none.log": "{} >> [{}], [{}] | {} tried to use chips with no game",
    "gen.use.spec": "`\"You cannot use chips in a game you are not a part of.\"`",
    "gen.use.spec.log": "{} >> [{}], [{}] | {} tried to use chips in the wrong game",
    "gen.use.mid": "`\"You cannot use chips right now, in the middle of a round.\"`",
    "gen.use.mid.log": "{} >> [{}], [{}] | {} tried to use chips mid-game",
    "gen.use.poor": "`\"You do not possess enough chips to use that many.\"`",
    "gen.use.poor.log": "{} >> [{}], [{}] | {} failed to use {} chips",
    "gen.conv": "`\"{} has converted:\"`\n## {} to {}",
    "gen.conv.log": "{} >> [{}], [{}] | {} converted {} to {} chips",
    "gen.conv.none.log": "{} >> [{}], [{}] | {} tried to convert chips with no game",
    "gen.conv.spec": "`\"You cannot convert chips in a game you are not a part of.\"`",
    "gen.conv.spec.log": "{} >> [{}], [{}] | {} tried to convert chips in the wrong game",
    "gen.conv.mid": "`\"You cannot convert chips right now, in the middle of a round.\"`",
    "gen.conv.mid.log": "{} >> [{}], [{}] | {} tried to convert chips mid-game",
    "gen.conv.frac": "`\"That conversion would result in a fractional chip; please pay attention to the conversion ratios.\"`",
    "gen.conv.frac.log": "{} >> [{}], [{}] | {} tried to convert illegal amount of chips ({} to {})",
    "gen.conv.poor": "`\"You do not possess enough chips to convert that many.\"`",
    "gen.conv.poor.log": "{} >> [{}], [{}] | {} tried to convert too many chips ({} to {})",
    "gen.tfa": "`\"TF successfully added.\"`",
    "gen.tfa.log": "{} >> [{}], [{}] | {} added tf {} to {}",
    "gen.tfa.none.log": "{} >> [{}], [{}] | {} added tf with no game",
    "gen.tfa.spec": "`\"You cannot edit tfs in a game you are not a part of.\"`",
    "gen.tfa.spec.log": "{} >> [{}], [{}] | {} added tf in the wrong game",
    "gen.tfa.wrong": "`\"You cannot edit the tfs of someone who is not playing.\"`",
    "gen.tfa.wrong.log": "{} >> [{}], [{}] | {} added tf to someone who's not playing",
    "gen.tfr": "`\"TF successfully removed.\"`",
    "gen.tfr.log": "{} >> [{}], [{}] | {} removed tf {} from {}",
    "gen.tfr.none.log": "{} >> [{}], [{}] | {} tried to remove a tf with no game",
    "gen.tfr.spec": "`\"You cannot edit tfs in a game you are not a part of.\"`",
    "gen.tfr.spec.log": "{} >> [{}], [{}] | {} tried to remove a tf in the wrong game",
    "gen.tfr.wrong": "`\"You cannot edit the tfs of someone who is not playing.\"`",
    "gen.tfr.wrong.log": "{} >> [{}], [{}] | {} tried to remove a tf of someone who's not playing",
    "gen.tfr.fail": "`\"You cannot remove a TF that doesn't exist.\"`",
    "gen.tfr.fail.log": "{} >> [{}], [{}] | {} tried to remove tf {} from {} that doesn't exist",
    "gen.tfm": "`\"TF successfully marked.\"`",
    "gen.tfm.log": "{} >> [{}], [{}] | {} toggled tf #{} of {}",
    "gen.tfm.none.log": "{} >> [{}], [{}] | {} tried to toggle tf with no game",
    "gen.tfm.spec": "`\"You cannot edit tfs in a game you are not a part of.\"`",
    "gen.tfm.spec.log": "{} >> [{}], [{}] | {} tried to toggle tf in the wrong game",
    "gen.tfm.wrong": "`\"You cannot edit the tfs of someone who is not playing.\"`",
    "gen.tfm.wrong.log": "{} >> [{}], [{}] | {} tried to toggle tf of someone who's not playing",
    "gen.tfm.fail": "`\"You cannot mark a TF that doesn't exist.\"`",
    "gen.tfm.fail.log": "{} >> [{}], [{}] | {} tried to toggle tf {} of {} that doesn't exist",
    "gen.tfl.self": "*Your current TFs:*\n```\n{}```",
    "gen.tfl.entry.self": "{} ({} {})\n",
    "gen.tfl.self.log": "{} >> [{}], [{}] | {} viewed their own tfs",
    "gen.tfl.other": "*{}'s current TFs:*\n```\nTO DO\n{}\nFINISHED\n{}```",
    "gen.tfl.entry.other": "    {}: {} ({} {})\n",
    "gen.tfl.other.log": "{} >> [{}], [{}] | {} viewed tfs of {}",
    "gen.tfl.types": ["PHYS", "MENT", "ARTI", "SUPE", "MERG", "SWAP"],
    "gen.tfl.none.log": "{} >> [{}], [{}] | {} tried to view tfs in a non-existent game",
    "gen.tfl.spec.log": "{} >> [{}], [{}] | {} tried to view tfs of someone who's not playing",
    "gen.tfl.spec": "`\"You cannot view the tfs of someone who is not playing.\"`",

    "admin.gen.end": "`\"Administrator-level Access detected. The game running for this table has been forcibly ended.\"`",
    "admin.gen.end.log": "{} >> [{}], [{}] | Admin {} force-ended a game",
    "admin.gen.none": "`\"Administrator-level Access detected. Request failed. There is no game at this table.\"`",
    "admin.gen.end.none.log": "{} >> [{}], [{}] | Admin {} tried to force-end a non-existent game",
    "admin.gen.kick": "`\"Administrator-level Access detected. Player {} has been forcibly removed from this table.\"`",
    "admin.gen.kick.log": "{} >> [{}], [{}] | Admin {} removed player {}",
    "admin.gen.kick.none.log": "{} >> [{}], [{}] | Admin {} tried to remove a player from a nonexistent game",
    "admin.gen.spec": "`\"Administrator-level Access detected. Request failed. This person is not playing at this table.\"`",
    "admin.gen.kick.spec.log": "{} >> [{}], [{}] | Admin {} tried to remove a non-existent player",
    "admin.gen.chips": "`\"Administrator-level Access detected. {} now has the following chips:\"`\n## {}",
    "admin.gen.chips.log": "{} >> [{}], [{}] | Admin {} set chips of {} to {}",
    "admin.gen.chips.none.log": "{} >> [{}], [{}] | Admin {} tried to set chips in a non-existent game",
    "admin.gen.chips.spec.log": "{} >> [{}], [{}] | Admin {} tried to set chips for a non-player",
    "admin.gen.used": "`\"Administrator-level Access detected. {}'s used chips record has been has been updated to:\"`\n## {}",
    "admin.gen.used.log": "{} >> [{}], [{}] | Admin {} set used chips of {} to {}",
    "admin.gen.used.none.log": "{} >> [{}], [{}] | Admin {} tried to set used chips at a non-existent game",
    "admin.gen.used.spec.log": "{} >> [{}], [{}] | Admin {} tried to set used chips for a non-player",
    "admin.gen.bet": "`\"Administrator-level Access detected. The bet in this game has been has been updated to:\"`\n## {}",
    "admin.gen.bet.log": "{} >> [{}], [{}] | Admin {} set game bet to {}",
    "admin.gen.bet.none.log": "{} >> [{}], [{}] | Admin {} tried to set bet for a non-existent game",
    "admin.gen.stake": "`\"Administrator-level Access detected. The stake of this game has been set to '{}'.\"`",
    "admin.gen.stake.log": "{} >> [{}], [{}] | Admin {} changed stake of game to {}",
    "admin.gen.stake.none.log": "{} >> [{}], [{}] | Admin {} tried to change stake for a non-existent game",
    "admin.gen.turn": "`\"Administrator-level Access detected. It is now {}'s turn to initiate the bet.\"`",
    "admin.gen.turn.log": "{} >> [{}], [{}] | Admin {} changed bet turn of game to {}",
    "admin.gen.turn.fail": "`\"Administrator-level Access detected. Request failed. Index is out of bounds of player list.\"`",
    "admin.gen.turn.fail.log": "{} >> [{}], [{}] | Admin {} tried to change bet turn of game to out of bounds",
    "admin.gen.turn.none.log": "{} >> [{}], [{}] | Admin {} tried to change bet turn for a non-existent game",
    "admin.gen.merge": "`\"Administrator-level Access detected. Merge request has been processed. {}'s chips and winnings shall be combined with {}'s.\"`\n`\"{} now has:\"`\n## {}\n`\"and has used:\"`\n## {}",
    "admin.gen.merge.log": "{} >> [{}], [{}] | Admin {} merged player {} into {}",
    "admin.gen.merge.none.log": "{} >> [{}], [{}] | Admin {} tried to merge players in a non-existent game",
    "admin.gen.spec.mult": "`\"Administrator-level Access detected. Request failed. One or more of these people is not playing at this table.\"`",
    "admin.gen.merge.spec.log": "{} >> [{}], [{}] | Admin {} tried to merge non-players",
    "admin.gen.merge.mid": "`\"Administrator-level Access detected. Request failed. Players are unable to be merged in the middle of a round.\"`",
    "admin.gen.merge.mid.log": "{} >> [{}], [{}] | Admin {} tried to merge players midround",
    "admin.gen.swap": "`\"Administrator-level Access detected. {} and {} have been processed as having switched bodies.\"`",
    "admin.gen.swap.log": "{} >> [{}], [{}] | Admin {} swapped players {} and {}",
    "admin.gen.swap.none.log": "{} >> [{}], [{}] | Admin {} tried to swap players in a non-existent game",
    "admin.gen.swap.spec.log": "{} >> [{}], [{}] | Admin {} tried to swap non-players",
    "admin.gen.swap.mid": "`\"Administrator-level Access detected. Request failed. Players are unable to be swapped in the middle of a round.\"`",
    "admin.gen.swap.mid.log": "{} >> [{}], [{}] | Admin {} tried to swap players midround",
    
    "bj.hand": "`\"Here are your opponents' current hands:\"`\n{}\n`\"Here is your current hand:\"`\n# {}\n## Total Value: {}",
    "bj.hand.per": "**{}**: {} -- {}\n",
    "bj.hand.log": "{} >> [{}], [{}] | {} looked at their Blackjack hand ({})",
    "bj.none": "`\"There is no Blackjack game running at this table at the moment.\"`",
    "bj.hand.none.log": "{} >> [{}], [{}] | {} tried to look at their Blackjack hand with no game",
    "bj.hand.spec": "`\"You cannot look at your hand in a game you are not a part of.\"`",
    "bj.hand.spec.log": "{} >> [{}], [{}] | {} tried to look at their Blackjack hand in a game they're not part of",
    "bj.hand.out": "`\"You currently do not have a hand to look at; the round hasn't started yet.\"`",
    "bj.hand.out.log": "{} >> [{}], [{}] | {} tried to look at their Blackjack hand outside of a round",
    "bj.hit": "`\"{} hits,\"` *C1RC3 affirms.*\n*She pulls a card from the top of the deck and sets it down for all to see.*\n# {}",
    "bj.next": "{}\n`\"It is now your turn, {}.\"`",
    "bj.hit.log": "{} >> [{}], [{}] | {} drew {} in Blackjack",
    "bj.hit.bust": "*C1RC3 shakes her head as she calculates the hand.* `\"Unfortunately, you have busted, {}.\"`\n*The facedown card magically flips itself over, revealing the unfortunate hand:*\n## {}",
    "bj.hit.bust.log": "                     >> {} busted.",
    "bj.hit.none.log": "{} >> [{}], [{}] | {} hit in Blackjack with no Blackjack game",
    "bj.hit.spec": "`\"You cannot be dealt cards in a game you are not a part of.\"`",
    "bj.hit.spec.log": "{} >> [{}], [{}] | {} hit in a Blackjack game they're not part of",
    "bj.hit.out": "`\"You currently do not have a hand to hit with; the round hasn't started yet.\"`",
    "bj.hit.out.log": "{} >> [{}], [{}] | {} tried to hit in Blackjack outside of a round",
    "bj.hit.turn": "`\"You may not hit yet; it is not your turn.\"`",
    "bj.hit.turn.log": "{} >> [{}], [{}] | {} tried to hit in Blackjack outside of their turn",
    "bj.stand": "`\"{} stands,\"` *C1RC3 affirms.*",
    "bj.stand.log": "{} >> [{}], [{}] | {} stood in Blackjack",
    "bj.stand.none.log": "{} >> [{}], [{}] | {} tried to stand in Blackjack with no Blackjack game",
    "bj.stand.spec": "`\"You cannot stand in a game you are not a part of.\"`",
    "bj.stand.spec.log": "{} >> [{}], [{}] | {} tried to stand in a Blackjack game they're not part of",
    "bj.stand.out": "`\"You currently do not have a hand to stand with; the round hasn't started yet.\"`",
    "bj.stand.out.log": "{} >> [{}], [{}] | {} tried to stand in Blackjack outside of a round",
    "bj.stand.turn": "`\"You may not stand yet; it is not your turn.\"`",
    "bj.stand.turn.log": "{} >> [{}], [{}] | {} tried to stand in Blackjack outside of their turn",
    "bj.end": "`\"The round has ended. I will now reveal everyone's cards.\"`\n{}",
    "bj.end.hand": "## __{}__\n# {}: {} {}\n",
    "bj.end.con": ["(Busted)", "", "", "(Blackjack)", "(5-Card Charlie)"],
    "bj.end.con.win": ["", "with a Blackjack", "with a 5-card Charlie"],
    "bj.end.win": "`\"The Casino congratulates {} for winning this round{}.\"`\n*C1RC3 opens a compartment in her abdomen where a pile of fresh chips lays, and pushes it over to {}, bumping their total chips to:*\n# {}\n`\"{} shall decide the next initial bet.\"`",
    "bj.end.tie": "`\"{}, you have tied{}! The new bet has been multiplied to:\"`\n# {}\n`\"Each winner will now be given a new hand.\"`\n{}*She begins to draw cards from the deck, deftly placing them down in front of each winner of the previous round.*\n{}`\"The first turn goes to {} this round.\"`",
    "bj.start.hand": "## __{}__\n# {}\n",
    "bj.reshuffle": "*Before C1RC3 begins to draw cards, she places all of the cards into a compartment that slides open in her arm, and shuts it. A moment of whirring later, she opens it again and pulls out a newly shuffled deck.*\n",
    "bj.reshuffle.log": "                     >> Deck was reshuffled",
    "bj.end.log": "{} >> [{}], [{}] | The Blackjack round has ended\n                     >> {} won",
    "bj.start": "`\"The players have agreed on a bet. The round shall now begin.\"`\n{}*She begins to draw cards from the deck, deftly placing them down in front of each player.*\n{}`\"The first turn goes to {} this round.\"`",
    "bj.start.log": "{} >> [{}], [{}] | The Blackjack round has started",
    "admin.bj.deck": "`\"Administrator-level Access detected. Scanning deck...\"`\n```{}```",
    "admin.bj.deck.log": "{} >> [{}], [{}] | Admin {} revealed the Blackjack deck",
    "admin.bj.deck.none.log": "{} >> [{}], [{}] | Admin {} tried to reveal a Blackjack deck with no Blackjack",
    "admin.bj.shuffle": "`\"Administrator-level Access detected. Manually shuffling deck...\"`\n*C1RC3 places all of the cards into a compartment that slides open in her arm, and shuts it. A moment of whirring later, she opens it again and pulls out a newly shuffled deck.*",
    "admin.bj.shuffle.log": "{} >> [{}], [{}] | Admin {} shuffled the Blackjack deck",
    "admin.bj.shuffle.none.log": "{} >> [{}], [{}] | Admin {} tried to shuffle a Blackjack deck with no Blackjack game",
    
    "mg.shuffle": "*C1RC3 places all of the cards into a compartment that slides open in her arm, and shuts it. A moment of whirring later, she opens it again and pulls out a newly shuffled deck, setting it down on the table.",
    "mg.shuffle.log": "{} >> [{}], [{}] | {} shuffled the deck in a Misc game",
    "mg.none": "`\"There is no Misc game running at this table at the moment.\"`",
    "mg.shuffle.none.log": "{} >> [{}], [{}] | {} tried to shuffle in a Misc game that doesn't exist",
    "mg.deck": "`\"There are {} cards remaining in the deck.\"`\n",
    "mg.deck.big": "## {}...\n*{} cards have been omitted.*\n",
    "mg.deck.small": "## {}\n",
    "mg.deck.peek": "`\"{} has peeked at the deck.\"`",
    "mg.deck.log": "{} >> [{}], [{}] | {} checked a Misc deck",
    "mg.deck.peek.log": "                     >> {} peeked at the Misc deck",
    "mg.deck.none.log": "{} >> [{}], [{}] | {} tried to peek at the deck of a non-existent Misc game",
    "mg.draw": "`\"{} has drawn:\"`\n# {}",
    "mg.draw.hide": "`\"{} has drawn {} cards.\"`",
    "mg.draw.log": "{} >> [{}], [{}] | {} drew {} in a Misc game",
    "mg.draw.none.log": "{} >> [{}], [{}] | {} tried to draw in a non-existent Misc game",
    "mg.draw.spec": "`\"You cannot be dealt cards in a game you are not a part of.\"`",
    "mg.draw.spec.log": "{} >> [{}], [{}] | {} tried to draw in a Misc game they're not part of",
    "mg.draw.fail": "`\"There are only {} cards left in the deck right now.\"`",
    "mg.draw.fail.log": "{} >> [{}], [{}] | {} failed to draw {} cards in a Misc game",
    "mg.roll": "*You have rolled {}d{}:*\n## {}{} = {}",
    "mg.roll.log": "{} >> [{}], [{}] | {} rolled {}d{} for {}",
    "mg.win": "`\"The Casino congratulates {} for winning this round.\"`\n*C1RC3 opens a compartment in her abdomen where a pile of fresh chips lays, and pushes it over to {}, bumping their total chips to:*\n# {}\n`\"{} shall decide the next initial bet.\"`",
    "mg.win.log": "{} >> [{}], [{}] | {} won their Misc game round",
    "mg.win.none.log": "{} >> [{}], [{}] | {} tried to win in a non-existent Misc game",
    "mg.win.spec": "`\"You cannot win in a Misc game you are not a part of.\"`",
    "mg.win.spec.log": "{} >> [{}], [{}] | {} tried to win in a Misc game they're not part of",
    "mg.win.out": "`\"You cannot win in a round that hasn't started yet.\"`",
    "mg.win.out.log": "{} >> [{}], [{}] | {} tried to win in a Misc game outside of a round",
    "mg.start": "`\"The players have agreed on a bet. The round has begun.\"`",
    "mg.start.log": "{} >> [{}], [{}] | The Misc game round has started",
    
    "ty.hand": "\n`\"Here is your current hand:\"`\n{}",
    "ty.hand.card": "## {}: {} ({})\n",
    "ty.hand.card.played": ["Unplayed", "Played"],
    "ty.hand.log": "{} >> [{}], [{}] | {} looked at their Tourney hand",
    "ty.none": "`\"There is no Tourney game running at this table at the moment.\"`",
    "ty.hand.none.log": "{} >> [{}], [{}] | {} tried to look at their Tourney hand with no Tourney game",
    "ty.hand.spec": "`\"You cannot look at your hand in a game you are not a part of.\"`",
    "ty.hand.spec.log": "{} >> [{}], [{}] | {} tried to look at their Tourney hand in a game they're not part of",
    "ty.hand.out": "`\"You currently do not have a hand to look at; the round hasn't started yet.\"`",
    "ty.hand.out.log": "{} >> [{}], [{}] | {} tried to look at their Tourney hand outside of a round",
    "ty.recon": "`\"What cards your opponents have sent forward already:\"`\n{}\n`\"You currently have {} points.\"`",
    "ty.recon.opp": "({}) **{}**:\n{}\n",
    "ty.recon.log": "{} >> [{}], [{}] | {} reviewed their Tourney opponents",
    "ty.recon.none.log": "{} >> [{}], [{}] | {} tried to review their Tourney opponents with no Tourney game",
    "ty.recon.spec": "`\"You cannot inspect your opponents in a game you are not a part of.\"",
    "ty.recon.spec.log": "{} >> [{}], [{}] | {} tried to review their Tourney opponents in a game they're not part of",
    "ty.play": "*C1RC3 looks at the card {} slid forward to the center of the table, and confirms,* `\"{} has chosen a card.\"`",
    "ty.play.log": "{} >> [{}], [{}] | {} played Tourney card #{}",
    "ty.play.none.log": "{} >> [{}], [{}] | {} tried to play a Tourney card with no Tourney game",
    "ty.play.spec": "`\"You cannot play a card in a game you are not a part of.\"`",
    "ty.play.spec.log": "{} >> [{}], [{}] | {} tried to play a Tourney card in a game they're not part of",
    "ty.play.out": "`\"You currently have no cards to play; the round hasn't started yet.\"`",
    "ty.play.out.log": "{} >> [{}], [{}] | {} tried to play a Tourney card outside of a round",
    "ty.play.fail": "`\"You do not have that many cards in your hand.\"`",
    "ty.play.fail.log": "{} >> [{}], [{}] | {} tried to play non-existent Tourney card #{}",
    "ty.play.dupe": "`\"You've already played that card before.\"`",
    "ty.play.dupe.log": "{} >> [{}], [{}] | {} tried to play Tourney card #{} again",
    "ty.turn": "`\"All players have brought forth a card. The Tourney shall now proceed...\"` *The {} cards on the table all flip over magically, revealing themselves:*\n{}\n*Everyone's cards flash red, except for {}'s.*\n`\"{} takes this match! You have been awarded a point, bringing you to a total of {} points.\"`\n*C1RC3 waves her hand, and the center of the table clears itself.*\n\n",
    "ty.turn.played": "# {} ({})\n",
    "ty.turn.log": "                     >> Tourney match #{} ended with {} as winner",
    "ty.turn.next": "`\"Match #{} has commenced. Once again, send forth the card you wish to compete.\"`",
    "ty.turn.end": "`\"That was the last match of the round--it is time to decide a victor.\"`\n{}{}`\"Congratulations, {}; you have bested all of your opponents in the Tourney!{}\"`\n*C1RC3 opens a compartment in her abdomen where a pile of fresh chips lays, and pushes it over to {}, bumping their total chips to:*\n# {}\n\n`\"{} shall decide the next initial bet.\"`",
    "ty.turn.points": "## {}: {}\n",
    "ty.turn.tie": "`\"There are multiple candidates for a victor this round; {}, please send forth your final contender.\"`\n*Automatically, their cards magically float up into the air and set themselves down in the center of the table.*\n{}*The card that stays is {}'s, while the others fly back over to C1RC3's deck.*\n",
    "ty.turn.over": " Because you ended with {} points, your chips rewarded shall be multiplied by {}!",
    "ty.turn.end.log": "                     >> Tourney round ended with {} as winner",
    "ty.start": "`\"The players have agreed on a bet. The round shall now begin.\"`\n*C1RC3 places all of the cards into a compartment that slides open in her arm, and shuts it. A moment of whirring later, she opens it again and pulls out a newly shuffled deck. She begins to draw cards from the deck, sliding {} of them face-down to each player.*\n`\"Match 1 out of {} has commenced. Each of you, please send forth the card you wish to compete.\"`",
    "ty.start.log": "{} >> [{}], [{}] | The Tourney round has started"
}